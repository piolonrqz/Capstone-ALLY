# -> Create your own "application.properties"
# -> located at: "wachichaw\src\main\resources"
coauthors: agramon, enriquez, largoza, malagapo, pangalay.

# Swagger UI configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true


spring.application.name=ally

server.port=8080

# Railway Database Configuration
spring.datasource.url=jdbc:mysql://tramway.proxy.rlwy.net:25250/railway
spring.datasource.username=root
spring.datasource.password=cZlTJUPGhePipIRtbLFHXFtsgQJSaZpS

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
logging.level.org.springframework.security=DEBUG

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-id=839498679598-stcj9sb9foc1nhme126av9bfgk38do19.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=https://www.googleapis.com/auth/userinfo.email,https://www.googleapis.com/auth/userinfo.profile,https://www.googleapis.com/auth/contacts,https://www.googleapis.com/auth/contacts.readonly,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
scrt: 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

server.error.include-stacktrace=never

# TEST AI - Gemini Flash 2.0
spring.ai.openai.chat.base-url=https://generativelanguage.googleapis.com
spring.ai.openai.chat.completions-path=/v1beta/openai/chat/completions
spring.ai.openai.api-key= 
spring.ai.openai.chat.options.model=gemini-2.0-flash

# K: AIzaSyBKAnxwUKbQdw87tccs-gLJx2vP03YHH9k

# Use the path where Render mounts the secret file
# firebase.service.account.path=file:/etc/secrets/studyspace-firebasesdk.json

#for local development
firebase.service.account.path=classpath:ally-firebasesdk.json
firebase.storage.bucket=ally-1d4e6.firebasestorage.app
storage.type=firebase

# Firebase Configuration
firebase.storage.weka.data.folder=weka/data
firebase.storage.weka.models.folder=weka/models

# Temporary directory to store downloads/models locally
weka.temp.path=${java.io.tmpdir}/weka

# Vertex AI Configuration
vertex.ai.project-id=gen-lang-client-0059670674
vertex.ai.location=us-central1
vertex.ai.model.endpoint=5483076471230562304

# For fine-tuned models deployed to endpoints, use the base model name
# Your fine-tuned model is based on Gemini, so use the base model
vertex.ai.model.name=gemini-1.5-flash-002

# The actual fine-tuned model will be accessed via the endpoint
# vertex.ai.model.endpoint=5483076471230562304

# Service Account Key for Google Cloud
google.cloud.credentials.location=classpath:service-account-key.json

# Spring Cloud GCP (Optional - can be removed if not used)
spring.cloud.gcp.credentials.location=classpath:service-account-key.json
spring.cloud.gcp.project-id=839498679598
spring.cloud.gcp.core.enabled=true

# Logging for debugging
logging.level.com.google.cloud=DEBUG
logging.level.com.wachichaw=DEBUG


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=allylegal.cit@gmail.com
spring.mail.protocol=smtp
spring.mail.password=hbhe jhvq dsil pgsa
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.debug=true
spring.mail.properties.mail.smtp.starttls.enabled=true
spring.mail.properties.mail.smtp.starttls.required=true